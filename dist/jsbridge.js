/* Build Time: 2019-09-16 19:59:41 */
!function(e){var o="function"==typeof define,r="undefined"!=typeof module&&module.exports;o?define(e):r&&(module.exports=e())}(function(){var a=window.semobJSBridge;if(!a)return console.warn("[Error]:检测不到客户端类semobJSBridge。"),null;var l=(new Date).getTime()%864e5*1e4;function e(e,o,r){var t="";"function"==typeof(o=o||"")?(r=o,o=""):"[object Object]"===Object.prototype.toString.call(o)?o=JSON.stringify(o):o&&console.error("[Error]_SG_BFO_callNativeMethod_:参数格式应为(methodName, params, callback)，params应为Object或可省略不传。"),r&&"function"!=typeof r?console.error("[Error]_SG_BFO_callNativeMethod_:参数格式应为(methodName, params, callback)，params和callback为可选参数。"):r=r||function(){},a?"function"==typeof a.callNativeMethod?(t=(l++).toString(),n[t]=r,a.callNativeMethod(e,o,t)):a.callNativeMethod?console.error("[Error]_SG_BFO_callNativeMethod_:semobJSBridge.callNativeMethod不是一个Function。"):console.error("[Error]_SG_BFO_callNativeMethod_:semobJSBridge.callNativeMethod不存在。"):console.error("[Error]_SG_BFO_callNativeMethod_:检测不到客户端类semobJSBridge。")}var n={};return a&&(a.callJSCallback=function(e,o,r,t){if(e){var a=n[e];a&&(a({code:o,message:r||"",data:decodeURIComponent(t||"")}),a=null,delete n[e])}}),window._SG_BFO_callNativeMethod_=e});